"""
Django-oscar settings for the {{ project_name }} project.
This file was originally generated by 'django-admin startproject' using Django {{ django_version }}.

For more information on this file, see https://docs.djangoproject.com/en/{{ docs_version }}/topics/settings/

For the full list of settings and their values, see https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/

See also https://simpleisbetterthancomplex.com/tips/2017/07/03/django-tip-20-working-with-multiple-settings-modules.html
"""

import os
from pathlib import Path
from oscar.defaults import *

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

AUTHENTICATION_BACKENDS = (
    'oscar.apps.customer.auth_backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# See https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/#databases
DATABASES = {
    'default': {
        'ATOMIC_REQUESTS': True,
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': 'localhost',
        'NAME': 'frobshop',
        'PASSWORD': 'hithere',
        'PORT': '5432',
        'USER': 'postgres',
    },
    # 'sqlite': {
    #     'ATOMIC_REQUESTS': True,
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
}

# See https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/#std:setting-DEBUG
DEBUG = True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# See https://docs.djangoproject.com/en/{{ docs_version }}/howto/initial-data/#initial-data-via-fixtures
FIXTURE_DIRS = [
    'fixtures',
]

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
    },
}

# The order of the items in INSTALLED_APPS is signficicant
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.humanize',  # See https://docs.djangoproject.com/en/3.1/ref/contrib/humanize/
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.sites',  # See https://docs.djangoproject.com/en/3.1/ref/contrib/sites/#module-django.contrib.sites
    'django.contrib.flatpages',
    # 'django_readonly_field',

    'oscar.config.Shop',
    'oscar.apps.analytics.apps.AnalyticsConfig',
    'oscar.apps.checkout.apps.CheckoutConfig',
    'oscar.apps.address.apps.AddressConfig',
    'oscar.apps.shipping.apps.ShippingConfig',
    'oscar.apps.catalogue.apps.CatalogueConfig',
    'oscar.apps.catalogue.reviews.apps.CatalogueReviewsConfig',
    'oscar.apps.communication.apps.CommunicationConfig',
    'oscar.apps.partner.apps.PartnerConfig',
    'oscar.apps.basket.apps.BasketConfig',
    'oscar.apps.payment.apps.PaymentConfig',
    'oscar.apps.offer.apps.OfferConfig',
    'oscar.apps.order.apps.OrderConfig',
    'oscar.apps.customer.apps.CustomerConfig',
    'oscar.apps.search.apps.SearchConfig',
    'oscar.apps.voucher.apps.VoucherConfig',
    'oscar.apps.wishlists.apps.WishlistsConfig',
    'oscar.apps.dashboard.apps.DashboardConfig',
    'oscar.apps.dashboard.reports.apps.ReportsDashboardConfig',
    'oscar.apps.dashboard.users.apps.UsersDashboardConfig',
    'oscar.apps.dashboard.orders.apps.OrdersDashboardConfig',
    'oscar.apps.dashboard.catalogue.apps.CatalogueDashboardConfig',
    'oscar.apps.dashboard.offers.apps.OffersDashboardConfig',
    'oscar.apps.dashboard.partners.apps.PartnersDashboardConfig',
    'oscar.apps.dashboard.pages.apps.PagesDashboardConfig',
    'oscar.apps.dashboard.ranges.apps.RangesDashboardConfig',
    'oscar.apps.dashboard.reviews.apps.ReviewsDashboardConfig',
    'oscar.apps.dashboard.vouchers.apps.VouchersDashboardConfig',
    'oscar.apps.dashboard.communications.apps.CommunicationsDashboardConfig',
    'oscar.apps.dashboard.shipping.apps.ShippingDashboardConfig',

    # 3rd-party apps that oscar depends on
    'widget_tweaks',
    'haystack',
    'treebeard',
    'sorl.thumbnail',   # Default thumbnail backend, can be replaced
    'django_tables2',

    # Other
    'phonenumber_field',
]

# Internationalization, see https://docs.djangoproject.com/en/{{ docs_version }}/topics/i18n/
LANGUAGE_CODE = 'en-us'

# The order of the items in MIDDLEWARE is signficicant.
# Generally, you can put FlatpageFallbackMiddleware at the end of the list.
# This means it will run first when processing the response,
# and ensures that any other response-processing middleware see the real flatpage response rather than 404.
# See https://docs.djangoproject.com/en/{{ docs_version }}/ref/contrib/flatpages/#how-to-add-change-and-delete-flatpages
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'oscar.apps.basket.middleware.BasketMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

PHONENUMBER_DB_FORMAT = 'NATIONAL'
PHONENUMBER_DEFAULT_REGION = 'US'

SITE_ID = 1

# See https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/#templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',  # Global templates
        ],
        'APP_DIRS': True,
        'OPTIONS': {  
            # See https://docs.djangoproject.com/en/{{ docs_version }}/topics/templates/#django.template.backends.django.DjangoTemplates
            'context_processors': [
                # See https://docs.djangoproject.com/en/{{ docs_version }}/ref/templates/api/#django.template.RequestContext
                'django.template.context_processors.debug',
                # 'django.template.context_processors.csrf',  # Always enabled
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'oscar.apps.search.context_processors.search_form',
                'oscar.apps.checkout.context_processors.checkout',
                'oscar.apps.communication.notifications.context_processors.notifications',
                'oscar.core.context_processors.metadata',
            ],
            # 'debug': True, # Overrides global DEBUG setting
            # 'string_if_invalid': '%s',  # See https://docs.djangoproject.com/en/{{ docs_version }}/ref/templates/api/#invalid-template-variables
            'libraries': {
                # 'mytag': 'my tag value',  # See https://docs.djangoproject.com/en/{{ docs_version }}/ref/templates/builtins/#std:templatetag-load
            },
        },
    },
]

# See https://django-oscar.readthedocs.io/en/{{ docs_version }}/ref/settings.html#review-settings
OSCAR_ALLOW_ANON_REVIEWS = False
OSCAR_BASKET_COOKIE_OPEN = "oscar_open_basket"
# See https://django-oscar.readthedocs.io/en/{{ docs_version }}/ref/settings.html#misc-settings
OSCAR_COOKIES_DELETE_ON_LOGOUT = []
OSCAR_CURRENCY_FORMAT = "USD"
OSCAR_DEFAULT_CURRENCY = "USD"
OSCAR_FROM_EMAIL = "oscar@example.com"
#OSCAR_HOMEPAGE = reverse_lazy('catalogue:index')
OSCAR_INITIAL_LINE_STATUS = 'Pending'
OSCAR_INITIAL_ORDER_STATUS = 'Pending'
OSCAR_MODERATE_REVIEWS = True
OSCAR_ORDER_STATUS_PIPELINE = {
    'Pending': ('Being processed', 'Cancelled',),
    'Being processed': ('Processed', 'Cancelled',),
    'Cancelled': (),
}
# See https://django-oscar.readthedocs.io/en/{{ docs_version }}/ref/settings.html#display-settings
OSCAR_SHOP_NAME = "Ancient Warmth"
OSCAR_SHOP_TAGLINE = "Custom bath salts made just for you!"

ROOT_URLCONF = 'main.urls'

# Static files (CSS, JavaScript, Images)
# In development, Django looks for static files inside each app's directory (myProject/appName/static) and serves them automatically. 
# See https://stackoverflow.com/a/40330875/553865
# See https://docs.djangoproject.com/en/{{ docs_version }}/howto/static-files/
# See https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/#static-url
# Ignored for development:
STATIC_URL = 'static/'  # "https://static.example.com/"

# Running "manage.py collectstatic" copies static files from all apps to STATIC_ROOT.
if not DEBUG: 
    STATIC_ROOT = '/var/sites/www.ancientwarmth.com/assets/'

# Additional directories for "manage.py collectstatic" to scan:
STATICFILES_DIRS = [
    BASE_DIR / 'static/',
]

# Internationalization
TIME_ZONE = 'America/New_York'
USE_L10N = True
USE_I18N = True
USE_TZ = True

WSGI_APPLICATION = '{{ project_name }}.wsgi.application'
